{"ast":null,"code":"import SCREEN from '../constants/screen';\nexport default function searchPagination(state, action) {\n  let totalData;\n  let lastpageCheck = action.items.page;\n  /**\n   * (If condition) - Searves data array for first search,\n   * (Else condition) -  Searves Data array for same search with paginated results\n   */\n\n  if (lastpageCheck === 1) {\n    totalData = action.items.Search;\n  } else {\n    totalData = [...state.apiData, ...action.items.Search];\n  }\n\n  lastpageCheck = getLastPage(totalData, action, lastpageCheck);\n  return { ...state,\n    isLoading: false,\n    apiData: totalData,\n    totalCountForSearchedData: action.items.totalResults,\n    selectedScreen: SCREEN.SEARCH_LIST,\n    lastPage: lastpageCheck,\n    lastSearchText: action.items.title\n  };\n}\n\nfunction getLastPage(totalData, action, lastpageCheck) {\n  /**\n   * (If condition) - Pagination check is updated if results are needed to be fetched on last scroll,\n   * (Else condition) - Sets null so on Scroll this value can be checked and further \n   *  pagination requests can be avoided\n   */\n  if (totalData.length < action.items.totalResults) {\n    lastpageCheck = lastpageCheck + 1;\n  } else {\n    lastpageCheck = null;\n  }\n\n  return lastpageCheck;\n}","map":{"version":3,"sources":["/Users/avinashmamidi/Desktop/Movie-Night-Extravaganza-master/app/src/utilites/searchPagination.js"],"names":["SCREEN","searchPagination","state","action","totalData","lastpageCheck","items","page","Search","apiData","getLastPage","isLoading","totalCountForSearchedData","totalResults","selectedScreen","SEARCH_LIST","lastPage","lastSearchText","title","length"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAgCC,MAAhC,EAAuC;AAClD,MAAIC,SAAJ;AACA,MAAIC,aAAa,GAAGF,MAAM,CAACG,KAAP,CAAaC,IAAjC;AAEA;;;;;AAIA,MAAGF,aAAa,KAAK,CAArB,EAAuB;AACtBD,IAAAA,SAAS,GAAGD,MAAM,CAACG,KAAP,CAAaE,MAAzB;AACA,GAFD,MAEO;AACNJ,IAAAA,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACO,OAAV,EAAkB,GAAGN,MAAM,CAACG,KAAP,CAAaE,MAAlC,CAAZ;AACA;;AAEDH,EAAAA,aAAa,GAAGK,WAAW,CAACN,SAAD,EAAWD,MAAX,EAAkBE,aAAlB,CAA3B;AACA,SAAO,EACH,GAAGH,KADA;AAEHS,IAAAA,SAAS,EAAC,KAFP;AAGHF,IAAAA,OAAO,EAACL,SAHL;AAIHQ,IAAAA,yBAAyB,EAACT,MAAM,CAACG,KAAP,CAAaO,YAJpC;AAKHC,IAAAA,cAAc,EAACd,MAAM,CAACe,WALnB;AAMHC,IAAAA,QAAQ,EAACX,aANN;AAOHY,IAAAA,cAAc,EAACd,MAAM,CAACG,KAAP,CAAaY;AAPzB,GAAP;AASH;;AAED,SAASR,WAAT,CAAqBN,SAArB,EAA+BD,MAA/B,EAAsCE,aAAtC,EAAqD;AACjD;;;;;AAKA,MAAGD,SAAS,CAACe,MAAV,GAAmBhB,MAAM,CAACG,KAAP,CAAaO,YAAnC,EAAgD;AAC5CR,IAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACF,GAFF,MAEQ;AACJA,IAAAA,aAAa,GAAG,IAAhB;AACF;;AACD,SAAOA,aAAP;AACJ","sourcesContent":["import SCREEN from '../constants/screen'\n\nexport default function searchPagination(state,action){\n    let totalData;\n    let lastpageCheck = action.items.page\n  \n    /**\n     * (If condition) - Searves data array for first search,\n     * (Else condition) -  Searves Data array for same search with paginated results\n     */\n    if(lastpageCheck === 1){\n     totalData = action.items.Search\n    } else {\n     totalData = [...state.apiData,...action.items.Search]\n    }\n\n    lastpageCheck = getLastPage(totalData,action,lastpageCheck)\n    return {\n        ...state,\n        isLoading:false,\n        apiData:totalData,\n        totalCountForSearchedData:action.items.totalResults,\n        selectedScreen:SCREEN.SEARCH_LIST,\n        lastPage:lastpageCheck,\n        lastSearchText:action.items.title,\n    }\n}\n\nfunction getLastPage(totalData,action,lastpageCheck) {\n    /**\n     * (If condition) - Pagination check is updated if results are needed to be fetched on last scroll,\n     * (Else condition) - Sets null so on Scroll this value can be checked and further \n     *  pagination requests can be avoided\n     */\n    if(totalData.length < action.items.totalResults){\n        lastpageCheck = lastpageCheck + 1\n     } else {\n        lastpageCheck = null  \n     }\n     return lastpageCheck\n}"]},"metadata":{},"sourceType":"module"}