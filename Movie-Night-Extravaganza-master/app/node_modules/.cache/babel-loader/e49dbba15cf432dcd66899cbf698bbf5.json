{"ast":null,"code":"var _jsxFileName = \"/Users/avinashmamidi/Downloads/Movie-Night-Extravaganza-master/app/src/components/navBar/index.js\";\nimport React from 'react';\nimport SCREEN from '../../constants/screen';\nimport store from '../../reducers/store';\nimport { updateScreenName } from '../../actions/index';\nimport { connect } from 'react-redux';\n\nfunction NavigationComponent(props) {\n  const {\n    selectedScreen,\n    apiData\n  } = props.data.search;\n  const searchActive = selectedScreen === SCREEN.SEARCH ? 'active' : '';\n  const myContent = selectedScreen === SCREEN.MY_CONTENT ? 'active' : '';\n  const lastSearchedActive = selectedScreen === SCREEN.SEARCH_LIST ? 'active' : '';\n  /**\n  * Collapse Nav-Bar for Mobile Devices , so inner width check is added\n  */\n\n  const dismissNav = () => {\n    if (document.getElementById('navBarButton') && window.innerWidth < 900) {\n      document.getElementById('navBarButton').click();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar navbar-expand-md navbar-dark bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"navbar-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Movie Night Extravaganza\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"navBarButton\",\n    type: \"button\",\n    className: \"navbar-toggler\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarCollapse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarCollapse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      store.dispatch(updateScreenName(SCREEN.SEARCH));\n      dismissNav();\n    },\n    className: `nav-item nav-link ${searchActive}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Search\"), apiData && apiData.length > 0 && /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      store.dispatch(updateScreenName(SCREEN.SEARCH_LIST));\n      dismissNav();\n    },\n    className: `nav-item nav-link ${lastSearchedActive}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 45\n    }\n  }, \"Last Searched\"), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      dismissNav();\n      store.dispatch(updateScreenName(SCREEN.MY_CONTENT));\n    },\n    className: `nav-item nav-link ${myContent}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"My Content\"), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      dismissNav();\n    },\n    className: \"nav-item nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Movies\"), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      dismissNav();\n    },\n    className: \"nav-item nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Series\"), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      dismissNav();\n    },\n    className: \"nav-item nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Episode\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-nav ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      dismissNav();\n    },\n    className: \"nav-item nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state\n  };\n};\n\nexport default connect(mapStateToProps)(NavigationComponent);","map":{"version":3,"sources":["/Users/avinashmamidi/Downloads/Movie-Night-Extravaganza-master/app/src/components/navBar/index.js"],"names":["React","SCREEN","store","updateScreenName","connect","NavigationComponent","props","selectedScreen","apiData","data","search","searchActive","SEARCH","myContent","MY_CONTENT","lastSearchedActive","SEARCH_LIST","dismissNav","document","getElementById","window","innerWidth","click","dispatch","length","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA8BF,KAAK,CAACG,IAAN,CAAWC,MAA/C;AACA,QAAMC,YAAY,GAAGJ,cAAc,KAAKN,MAAM,CAACW,MAA1B,GAAmC,QAAnC,GAA8C,EAAnE;AACA,QAAMC,SAAS,GAAGN,cAAc,KAAKN,MAAM,CAACa,UAA1B,GAAuC,QAAvC,GAAkD,EAApE;AACA,QAAMC,kBAAkB,GAAGR,cAAc,KAAKN,MAAM,CAACe,WAA1B,GAAwC,QAAxC,GAAmD,EAA9E;AAEC;;;;AAGD,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,KAA2CC,MAAM,CAACC,UAAP,GAAoB,GAAnE,EAAwE;AACtEH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCG,KAAxC;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAQ,IAAA,EAAE,EAAC,cAAX;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,SAAS,EAAC,gBAAlD;AAAmE,mBAAY,UAA/E;AAA0F,mBAAY,iBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAME;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,EAAE,EAAC,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,OAAO,EAAE,MAAM;AAChBpB,MAAAA,KAAK,CAACqB,QAAN,CAAepB,gBAAgB,CAACF,MAAM,CAACW,MAAR,CAA/B;AACAK,MAAAA,UAAU;AACX,KAHD;AAGG,IAAA,SAAS,EAAG,qBAAoBN,YAAa,EAHhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGH,OAAO,IAAIA,OAAO,CAACgB,MAAR,GAAiB,CAA5B,iBAAiC;AAAG,IAAA,OAAO,EAAE,MAAM;AAClDtB,MAAAA,KAAK,CAACqB,QAAN,CAAepB,gBAAgB,CAACF,MAAM,CAACe,WAAR,CAA/B;AACAC,MAAAA,UAAU;AACX,KAHiC;AAG/B,IAAA,SAAS,EAAG,qBAAoBF,kBAAmB,EAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALpC,eAUE;AAAG,IAAA,OAAO,EAAE,MAAM;AAChBE,MAAAA,UAAU;AACVf,MAAAA,KAAK,CAACqB,QAAN,CAAepB,gBAAgB,CAACF,MAAM,CAACa,UAAR,CAA/B;AACD,KAHD;AAGG,IAAA,SAAS,EAAG,qBAAoBD,SAAU,EAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAcE;AAAG,IAAA,OAAO,EAAE,MAAM;AAChBI,MAAAA,UAAU;AACX,KAFD;AAEG,IAAA,SAAS,EAAC,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAiBE;AAAG,IAAA,OAAO,EAAE,MAAM;AAChBA,MAAAA,UAAU;AACX,KAFD;AAEG,IAAA,SAAS,EAAC,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAoBE;AAAG,IAAA,OAAO,EAAE,MAAM;AAChBA,MAAAA,UAAU;AACX,KAFD;AAEG,IAAA,SAAS,EAAC,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBF,CADF,eAyBE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAE,MAAM;AAClBA,MAAAA,UAAU;AACX,KAFD;AAEG,IAAA,SAAS,EAAC,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAzBF,CANF,CADF;AAwCD;;AAED,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLjB,IAAAA,IAAI,EAAEiB;AADD,GAAP;AAGD,CAJD;;AAMA,eAAetB,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,mBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport SCREEN from '../../constants/screen'\nimport store from '../../reducers/store'\nimport { updateScreenName } from '../../actions/index'\nimport { connect } from 'react-redux'\n\nfunction NavigationComponent(props) {\n  const { selectedScreen, apiData } = props.data.search\n  const searchActive = selectedScreen === SCREEN.SEARCH ? 'active' : ''\n  const myContent = selectedScreen === SCREEN.MY_CONTENT ? 'active' : ''\n  const lastSearchedActive = selectedScreen === SCREEN.SEARCH_LIST ? 'active' : ''\n\n   /**\n   * Collapse Nav-Bar for Mobile Devices , so inner width check is added\n   */\n  const dismissNav = () => {\n    if (document.getElementById('navBarButton') && window.innerWidth < 900) {\n      document.getElementById('navBarButton').click()\n    }\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n      <a  className=\"navbar-brand\">Movie Night Extravaganza</a>\n      <button id=\"navBarButton\" type=\"button\" className='navbar-toggler' data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <div className=\"navbar-nav\">\n          <a onClick={() => {\n            store.dispatch(updateScreenName(SCREEN.SEARCH))\n            dismissNav()\n          }} className={`nav-item nav-link ${searchActive}`}>Search</a>\n          {apiData && apiData.length > 0 && <a onClick={() => {\n            store.dispatch(updateScreenName(SCREEN.SEARCH_LIST))\n            dismissNav()\n          }} className={`nav-item nav-link ${lastSearchedActive}`}>Last Searched</a>}\n\n          <a onClick={() => {\n            dismissNav()\n            store.dispatch(updateScreenName(SCREEN.MY_CONTENT))\n          }} className={`nav-item nav-link ${myContent}`}>My Content</a>\n          <a onClick={() => {\n            dismissNav()\n          }} className=\"nav-item nav-link\">Movies</a>\n          <a onClick={() => {\n            dismissNav()\n          }} className=\"nav-item nav-link\">Series</a>\n          <a onClick={() => {\n            dismissNav()\n          }} className=\"nav-item nav-link\">Episode</a>\n        </div>\n        <div className=\"navbar-nav ml-auto\">\n          <div onClick={() => {\n            dismissNav()\n          }} className=\"nav-item nav-link\">Login</div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state\n  }\n}\n\nexport default connect(mapStateToProps)(NavigationComponent);\n"]},"metadata":{},"sourceType":"module"}